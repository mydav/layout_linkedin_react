{"ast":null,"code":"var _jsxFileName = \"/Users/vadymbardukov/Dropbox/projects/Strive/react/Linkedin/src/Components/LoginComponent.js\";\nimport React from 'react';\nimport '../App.css';\nimport { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => state;\n\nconst mapDispatchToProps = dispatch => ({\n  setUserToken: base64 => dispatch({\n    type: \"SET_USERBASE64\",\n    payload: base64\n  })\n});\n\nfunction LoginComponent(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [saveCredentials, setSaveCredentials] = useState(false);\n  const [error, setError] = useState(undefined);\n\n  const login = async () => {\n    //create my \"token\" starting from username and password\n    //contact the APIs to prove identity\n    const resp = await fetch(\"http://localhost:3500/user/signin\", {\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (resp.ok) {\n      const respJson = await resp.json();\n      console.log(respJson);\n      if (saveCredentials) localStorage.setItem(\"access_token\", respJson.access_token);\n      props.setUserToken(respJson.access_token);\n      props.history.push(\"/profile\");\n    } else {\n      //console log\n      setError(\"Username and password incorrect\");\n      setUsername(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"*********\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Remember me\"), React.createElement(\"input\", {\n    type: \"checkbox\",\n    value: saveCredentials,\n    onChange: e => setSaveCredentials(!saveCredentials),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"button\",\n    onClick: login,\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), error && React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, error)));\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginComponent));","map":{"version":3,"sources":["/Users/vadymbardukov/Dropbox/projects/Strive/react/Linkedin/src/Components/LoginComponent.js"],"names":["React","useState","withRouter","connect","mapStateToProps","state","mapDispatchToProps","dispatch","setUserToken","base64","type","payload","LoginComponent","props","username","setUsername","password","setPassword","saveCredentials","setSaveCredentials","error","setError","undefined","login","resp","fetch","body","JSON","stringify","method","headers","ok","respJson","json","console","log","localStorage","setItem","access_token","history","push","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { useState } from \"react\"\nimport {withRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\n\nconst mapStateToProps = state => state\nconst mapDispatchToProps = dispatch => ({\n  setUserToken: base64 => dispatch({\n    type:\"SET_USERBASE64\",\n    payload: base64\n  }) \n})\n\nfunction LoginComponent(props) {\n\n  const [ username, setUsername] = useState(\"\")\n  const [ password, setPassword] = useState(\"\")\n  const [ saveCredentials, setSaveCredentials] = useState(false)\n  const [ error, setError] = useState(undefined)\n\n  const login = async () => {\n    //create my \"token\" starting from username and password\n    //contact the APIs to prove identity\n    const resp = await fetch(\"http://localhost:3500/user/signin\",  {\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n\n    if (resp.ok){\n      const respJson = await resp.json();\n      console.log(respJson)\n      if (saveCredentials)\n        localStorage.setItem(\"access_token\", respJson.access_token)\n        \n      props.setUserToken(respJson.access_token)\n      props.history.push(\"/profile\")\n    }\n    else{\n      //console log\n      setError(\"Username and password incorrect\")\n      setUsername(\"\")\n      setPassword(\"\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input type=\"text\" placeholder=\"username\" value={username} onChange={e => setUsername(e.target.value)}></input>\n        <input type=\"password\" placeholder=\"*********\" value={password} onChange={e => setPassword(e.target.value)}></input>\n        <span>Remember me</span>\n        <input type=\"checkbox\" value={saveCredentials} onChange={e => setSaveCredentials(!saveCredentials)}/>\n        <input type=\"button\" onClick={login} value=\"Login\"></input>\n        {error && <h2>{error}</h2>}\n      </header>\n    </div>\n  );\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginComponent));\n"]},"metadata":{},"sourceType":"module"}